{"version":3,"sources":["components/Dashboard/Dashboard.js","components/Login/Login.js","components/Preferences/Preferences.js","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","loginUser","credentials","a","axios","post","then","res","console","log","Login","setToken","useState","username","setUserName","password","setPassword","handleSubmit","e","preventDefault","token","className","onSubmit","type","onChange","target","value","Preferences","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAEe,SAASA,IACtB,OACE,2C,6DCEWC,E,8EAAf,WAAyBC,GAAzB,SAAAC,EAAA,+EAEUC,IAAMC,KAAN,kDAA8DH,GACjEI,MAAM,SAAAC,GACLC,QAAQC,IAAIF,MAJpB,sDAOIC,QAAQC,IAAR,MAPJ,yD,sBAWe,SAASC,EAAT,GAA8B,IAAbC,EAAY,EAAZA,SAC9B,EAAgCC,qBAAhC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,qBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EAAY,uCAAG,WAAMC,GAAN,eAAAf,EAAA,6DACnBe,EAAEC,iBADiB,SAEClB,EAAU,CAC5BY,WACAE,aAJiB,OAEbK,EAFa,OAMnBT,EAASS,GANU,2CAAH,sDAQlB,OACE,sBAAKC,UAAU,gBAAf,UACE,4DACA,uBAAMC,SAAUL,EAAhB,UACE,kCACE,yCACA,uBAAOM,KAAK,OAAOC,SAAU,SAAAN,GAAC,OAAIJ,EAAYI,EAAEO,OAAOC,aAEzD,kCACE,yCACA,uBAAOH,KAAK,WAAWC,SAAU,SAAAN,GAAC,OAAIF,EAAYE,EAAEO,OAAOC,aAE7D,8BACE,wBAAQH,KAAK,SAAb,4BCvCK,SAASI,IACtB,OACE,6CC4BWC,MAxBf,WACE,MAA0BhB,qBAA1B,mBAAOQ,EAAP,KAAcT,EAAd,KAEA,OAAIS,EAKF,sBAAKC,UAAU,UAAf,UACE,mDACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOQ,KAAK,aAAZ,SACE,cAAC7B,EAAD,MAEF,cAAC,IAAD,CAAO6B,KAAK,eAAZ,SACE,cAACF,EAAD,cAZD,cAAC,EAAD,CAAOhB,SAAUA,KCAbmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bdd5e21a.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Dashboard() {\n  return(\n    <h2>Dashboard</h2>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport './Login.css';\n\nasync function loginUser(credentials) {\n  try {\n    await axios.post(`https://projeto3-leorr.herokuapp.com/user/login`, credentials)\n      .then( res => {\n        console.log(res);\n      });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default function Login({ setToken }) {\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser({\n      username,\n      password\n    });\n    setToken(token);\n  }\n  return(\n    <div className=\"login-wrapper\">\n      <h1>Informações de login</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <p>Username</p>\n          <input type=\"text\" onChange={e => setUserName(e.target.value)}/>\n        </label>\n        <label>\n          <p>Password</p>\n          <input type=\"password\" onChange={e => setPassword(e.target.value)}/>\n        </label>\n        <div>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n}\n","import React from 'react';\n\nexport default function Preferences() {\n  return(\n    <h2>Preferences</h2>\n  );\n}\n","import React, { useState } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Login from './components/Login/Login';\nimport Preferences from './components/Preferences/Preferences';\n\nfunction App() {\n  const [token, setToken] = useState();\n\n  if(!token) {\n    return <Login setToken={setToken} />\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <h1>Login com sucesso</h1>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/preferences\">\n            <Preferences />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}